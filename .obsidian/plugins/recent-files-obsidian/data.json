{
  "recentFiles": [
    {
      "basename": "Environment creation",
      "path": "Anaconda/Environment creation.md"
    },
    {
      "basename": "Export and import environments",
      "path": "Anaconda/Export and import environments.md"
    },
    {
      "basename": "Packages",
      "path": "Anaconda/Packages.md"
    },
    {
      "basename": "Conda",
      "path": "Anaconda/Conda.md"
    },
    {
      "basename": "Series",
      "path": "Python/Pandas/Series.md"
    },
    {
      "basename": "Broadcasting",
      "path": "Python/NumPy/Broadcasting.md"
    },
    {
      "basename": "Revisions",
      "path": "Anaconda/Revisions.md"
    },
    {
      "basename": "Modules",
      "path": "Python/Modules.md"
    },
    {
      "basename": "OS",
      "path": "Bash/OS.md"
    },
    {
      "basename": "try exception",
      "path": "Python/try exception.md"
    },
    {
      "basename": "R",
      "path": "R/R.md"
    },
    {
      "basename": "MultiIndex",
      "path": "Python/Pandas/MultiIndex.md"
    },
    {
      "basename": "Missing data",
      "path": "Python/Pandas/Missing data.md"
    },
    {
      "basename": "Data frames",
      "path": "Python/Pandas/Data frames.md"
    },
    {
      "basename": "dtypes",
      "path": "Python/Pandas/dtypes.md"
    },
    {
      "basename": "Jupyter settings",
      "path": "Python/IPython/Jupyter settings.md"
    },
    {
      "basename": "Alias",
      "path": "Python/Alias.md"
    },
    {
      "basename": "Unfunc",
      "path": "Python/NumPy/Unfunc.md"
    },
    {
      "basename": "Slicing",
      "path": "Python/NumPy/Slicing.md"
    },
    {
      "basename": "Arrays",
      "path": "Python/NumPy/Arrays.md"
    },
    {
      "basename": "lists",
      "path": "Python/data types/Iterables/lists.md"
    },
    {
      "basename": "if",
      "path": "Python/control_flow/if.md"
    },
    {
      "basename": "Functions",
      "path": "Python/Functions/Functions.md"
    },
    {
      "basename": "Classes and objects",
      "path": "Python/OOP/Classes and objects.md"
    },
    {
      "basename": "Boolean",
      "path": "Python/data types/Boolean.md"
    },
    {
      "basename": "Control structures",
      "path": "Python/control_flow/Control structures.md"
    },
    {
      "basename": "for",
      "path": "Python/control_flow/for.md"
    },
    {
      "basename": "type_casting",
      "path": "Python/data types/type_casting.md"
    },
    {
      "basename": "data types",
      "path": "Python/data types/data types.md"
    },
    {
      "basename": "Shell commands",
      "path": "Python/IPython/Shell commands.md"
    },
    {
      "basename": "Magic commands",
      "path": "Python/IPython/Magic commands.md"
    },
    {
      "basename": "README",
      "path": "README.md"
    },
    {
      "basename": "Help",
      "path": "Python/IPython/Help.md"
    },
    {
      "basename": "IPython",
      "path": "Python/IPython/IPython.md"
    },
    {
      "basename": "Pandas",
      "path": "Python/Pandas/Pandas.md"
    },
    {
      "basename": "Inheritance",
      "path": "Python/OOP/Inheritance.md"
    },
    {
      "basename": "Polymorphism",
      "path": "Python/OOP/Polymorphism.md"
    },
    {
      "basename": "Encapsulation",
      "path": "Python/OOP/Encapsulation.md"
    },
    {
      "basename": "Namespaces and Scope",
      "path": "Python/Namespaces and Scope.md"
    },
    {
      "basename": "Methods",
      "path": "Python/Functions/Methods.md"
    },
    {
      "basename": "types",
      "path": "C/data types/types.md"
    },
    {
      "basename": "docstrings",
      "path": "Python/docstrings.md"
    },
    {
      "basename": "lambda functions",
      "path": "Python/Functions/lambda functions.md"
    },
    {
      "basename": "Arbitrary arguments",
      "path": "Python/Functions/Arguments/Arbitrary arguments.md"
    },
    {
      "basename": "keyword arguments",
      "path": "Python/Functions/Arguments/keyword arguments.md"
    },
    {
      "basename": "Default arguments",
      "path": "Python/Functions/Arguments/Default arguments.md"
    },
    {
      "basename": "Arithmetic operators",
      "path": "Python/Operators/Arithmetic operators.md"
    },
    {
      "basename": "Operators",
      "path": "Python/Operators/Operators.md"
    },
    {
      "basename": "Positional-only or keyword-only",
      "path": "Python/Functions/Arguments/Positional-only or keyword-only.md"
    },
    {
      "basename": "Assignment operators",
      "path": "Python/Operators/Assignment operators.md"
    }
  ],
  "omittedPaths": [],
  "maxLength": null,
  "openType": "tab"
}